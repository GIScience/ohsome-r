% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ohsome_parse.R
\name{ohsome_parse}
\alias{ohsome_parse}
\alias{ohsome_sf}
\alias{ohsome_df}
\title{Parse content from an ohsome API response}
\usage{
ohsome_parse(
  response,
  return_class = c("default", "sf", "data.frame", "list", "character")
)

ohsome_sf(response)

ohsome_df(response)
}
\arguments{
\item{response}{A response object}

\item{return_class}{One of the following:
\describe{
\item{default}{returns \code{sf} if ohsome API response is GeoJSON,
else a \code{data.frame}}
\item{sf}{returns \code{sf} if ohsome API response is GeoJSON,
else issues a warning and returns a \code{data.frame}}
\item{data.frame}{returns a \code{data.frame}}
\item{list}{returns a \code{list}}
\item{character}{returns the ohsome API response as text (JSON or
semicolon-separated values)}
}}
}
\value{
A list (if the response is of type "application/json"), an sf
object (if the response is of type "application/geo+json") or a
data.frame (if the response is of type "text/csv")
}
\description{
Extract and parse the content from an ohsome API response
}
\details{
\code{ohsome_parse()} parses an \code{ohsome_response} object into
an object of the specified class. By default, this is an \code{sf} object if
the ohsome API response contains GeoJSON data or a \code{data.frame} if it
does not. \code{ohsome_sf()}  and \code{ohsome_df()} are wrapper functions.
}
\examples{
r <- ohsome_query("elements/centroid", filter = "amenity=*", properties = "tags") |>
    set_boundary(osmdata::getbb("Heidelberg")) |>
    ohsome_post(parse = FALSE)

ohsome_parse(r)
ohsome_df(r)
ohsome_sf(r)
}
\concept{Extract and parse the content from an ohsome API response}
